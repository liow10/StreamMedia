<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>com.mkst.micro-iotclouds-communication</groupId>
		<artifactId>communication-videos-live2output</artifactId>
		<version>2.0</version>
	</parent>
	<artifactId>communication-videos-live2output-admin</artifactId>
	<description>视联接入通讯平台</description>

	<packaging>jar</packaging>
	<dependencies>
		<dependency>
			<groupId>com.mkst.micro-iotclouds-communication</groupId>
			<artifactId>communication-videos-live2output-rtmp</artifactId>
			<exclusions>
				<exclusion>
					<groupId>
						com.mkst.micro-iotclouds-communication
					</groupId>
					<artifactId>
						communication-videos-live2output-core
					</artifactId>
				</exclusion>
			</exclusions>
		</dependency>
		   <dependency>
                <groupId>com.mkst.micro-iotclouds-communication</groupId>
				<artifactId>communication-videos-live2output-core</artifactId>
				<!-- <classifier>pg</classifier>
				 <version>2.0</version> -->
            </dependency>
		<!-- <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-nacos-config</artifactId> 
			</dependency> <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId> 
			</dependency> -->
		<!-- <dependency> <groupId>com.alibaba.cloud</groupId> <artifactId>spring-cloud-starter-alibaba-nacos-discovery</artifactId> 
			</dependency> -->
	</dependencies>
	<build>
		<plugins>
		<!-- 	<plugin>将所有的依赖达到一个jar包里
				<artifactId>maven-assembly-plugin</artifactId>
				<configuration>
					<archive>
						<manifest>
							这里要替换成jar包main方法所在类
							<mainClass>com.sq.platform.datacube.core.impl.DataCube</mainClass>
						</manifest>
					</archive>
					<descriptorRefs>
						<descriptorRef>jar-with-dependencies</descriptorRef>
					</descriptorRefs>
				</configuration>
				<executions>
					<execution>
						<id>make-assembly</id> this is used for inheritance merges
						<phase>package</phase> 指定在打包节点执行jar包合并操作
						<goals>
							<goal>single</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			 <plugin>用混淆插件混淆代码
         <groupId>com.github.wvengen</groupId>
         <artifactId>proguard-maven-plugin</artifactId>
         <version>2.0.11</version>
         <executions>
             <execution>
                 <phase>package</phase>
                 <goals>
                     <goal>proguard</goal>
                 </goals>
             </execution>
         </executions>
         <configuration>
             <attach>true</attach>
             <attachArtifactClassifier>pg</attachArtifactClassifier>
             attach 的作用是在 install 与 deploy 时将生成的 pg 文件也安装与部署
             <options> 详细配置方式参考 ProGuard 官方文档
                 <option>-ignorewarnings</option> 忽略所有告警
                 <option>-dontshrink</option>   不做 shrink
                 <option>-dontoptimize</option> 不做 optimize
                 <option>-dontskipnonpubliclibraryclasses </option>
                 <option>-dontskipnonpubliclibraryclassmembers </option>
                 <option>-dontnote </option>

                 <option>-keepattributes Signature</option>

                 保持源码名与行号（异常时有明确的栈信息），注解（默认会过滤掉所有注解，会影响框架的注解）
                 <option>-keepattributes Exceptions,InnerClasses,*Annotation*,Signature,LineNumberTable</option>


                                保持bean类名与属性名不变不变
                 <option>-keep class com.sq.platform.datacube.model.**</option>
                 <option>-keepclassmembers class com.sq.platform.datacube.model.** { *;}</option>
                 保持对外的接口性质类对外的类名与方法名不变
                 <option>-keep class com.sq.platform.datacube.core.**</option>
                 <option>-keepclassmembers class com.sq.platform.datacube.core.** { *;}</option>

                 <option>-keep class com.sq.platform.datacube.exception.**</option>
                 <option>-keepclassmembers class com.sq.platform.datacube.exception.** { *;}</option>

                                以下配置第三方包不参与混淆
                 <option>-keepclassmembers class com.hopechart.dcroute.** { *;}</option>
                 <option>-dontwarn com.hopechart.dcroute.**</option>
                 <option>-keep class com.hopechart.dcroute.** {*;}</option>

                 <option>-keepclassmembers class com.hopechart.cloud.** { *;}</option>
                 <option>-dontwarn com.hopechart.cloud.**</option>
                  <option>-keep class com.hopechart.cloud.** {*;}</option>

                 <option>-keepclassmembers class com.hopechart.jcc.** { *;}</option>
                 <option>-dontwarn com.hopechart.jcc.**</option>
                 <option>-keep class com.hopechart.jcc.** {*;}</option>

                 <option>-keepclassmembers class oracle.** { *;}</option>
                 <option>-dontwarn oracle.**</option>
                 <option>-keep class oracle.**</option>

                 <option>-keepclassmembers class org.aopalliance.** { *;}</option>
                 <option>-dontwarn org.aopalliance.**</option>
                 <option>-keep class org.aopalliance.**</option>

                 <option>-keepclassmembers class org.apache.commons.** { *;}</option>
                 <option>-dontwarn org.apache.commons.**</option>
                 <option>-keep class org.apache.commons.**</option>

                 <option>-keepclassmembers class org.apache.log4j.** { *;}</option>
                 <option>-dontwarn org.apache.log4j.**</option>
                 <option>-keep class org.apache.log4j.**</option>

                 <option>-keepclassmembers  class org.slf4j.** { *;}</option>
                 <option>-dontwarn  org.slf4j.**</option>
                 <option>-keep class org.slf4j.**</option>

                 <option>-keepclassmembers class org.springframework.** { *;}</option>
                 <option>-dontwarn  org.springframework.**</option>
                 <option>-keep class org.springframework.**</option>

             </options>
             指定混淆的jar包，我这里是将上一步输出的jar包进行混淆
             <injar>communication-videos-live2output-admin-2.0-jar-with-dependencies.jar</injar>
             指定输出的jar包名
             <outjar>${project.build.finalName}-pg</outjar>
             <obfuscate>true</obfuscate>
             添加依赖，必须添加，不然会报一些莫名错误
             <libs>
                 <lib>${java.home}/lib/rt.jar</lib>
                 <lib>${java.home}/lib/jce.jar</lib>
                 <lib>D:/workspace3/datacube/lib/apache-axiom-api-1.2.7.jar</lib>
                 <lib>D:/workspace3/datacube/lib/axis2-kernel-1.7.1.jar</lib>
             </libs>
         </configuration>
     </plugin> -->
			<!--混淆代码插件 -->
			<!-- <plugin> <groupId>com.github.wvengen</groupId> <artifactId>proguard-maven-plugin</artifactId> 
				<version>2.0.14</version> <executions> <execution> <phase>package</phase> 
				<goals> <goal>proguard</goal> </goals> </execution> </executions> <configuration> 
				<proguardVersion>6.0.3</proguardVersion> <injar>${project.build.finalName}.jar</injar> 
				<outjar>${project.build.finalName}.jar</outjar> <obfuscate>true</obfuscate> 
				<proguardInclude>${basedir}/proguard.conf</proguardInclude> <libs> <lib>${java.home}/lib/rt.jar</lib> 
				<lib>${java.home}/lib/jce.jar</lib> </libs> </configuration> <dependencies> 
				<dependency> <groupId>net.sf.proguard</groupId> <artifactId>proguard-base</artifactId> 
				<version>6.0.3</version> </dependency> </dependencies> </plugin> -->
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>${spring-boot.version}</version>
				<executions>
					<execution>
						<goals>
							<goal>repackage</goal>
						</goals>
						<!-- <configuration> <mainClass>com.micro.iotclouds.communication.admin.RtmpServerApplication</mainClass> 
							</configuration> -->
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<configuration>
					<source>8</source>
					<target>8</target>
				</configuration>
			</plugin>
			<!-- <plugin> <groupId>org.springframework.boot</groupId> <artifactId>spring-boot-maven-plugin</artifactId> 
				</plugin> -->
			<plugin>
				<artifactId>maven-war-plugin</artifactId>
				<version>2.6</version>
				<configuration>
					<!--如果想在没有web.xml文件的情况下构建WAR，请设置为false。 -->
					<failOnMissingWebXml>false</failOnMissingWebXml>
				</configuration>
			</plugin>
		</plugins>
	</build>
</project>